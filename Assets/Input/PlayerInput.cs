//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.3
//     from Assets/Input/PlayerInput.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInput : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInput()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInput"",
    ""maps"": [
        {
            ""name"": ""FPSController"",
            ""id"": ""16e312a5-8d72-42ab-ad60-a87d71ed9447"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""PassThrough"",
                    ""id"": ""331495d7-4fcc-49d1-829f-823af91d50fa"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""f7603440-74ae-46e2-9c73-d3e37f507414"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""4a424e2b-7fbe-49b9-ba8d-4d8468b2e5de"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Return"",
                    ""type"": ""Button"",
                    ""id"": ""424f6c09-846f-4a67-a7e3-9c9e9a2bf6de"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Actions"",
                    ""type"": ""Value"",
                    ""id"": ""71de111b-72a2-4ac7-8d5a-e8c7c0223811"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""KeyBoard"",
                    ""id"": ""2ea2c95c-0376-49d1-bf1a-a35d52e0adea"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""6d35ed1d-ce46-4329-a53a-5da4d121c567"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""ddec7ebb-4842-44d1-8bcc-e89ad201a9b0"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""23da9d56-ba63-4f32-9144-bbaead244758"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""bdda4e26-507a-46d1-b7c6-26072b9fa8f2"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""b0f50e89-723b-47ca-bd2b-1bda0c7554d4"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7ae252d7-4be0-40fc-8012-b321e38a7ac8"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fd4495e7-8a5b-4f5d-b40f-b04277b05d05"",
                    ""path"": ""<Pointer>/delta"",
                    ""interactions"": """",
                    ""processors"": ""ScaleVector2(x=0.5,y=0.5)"",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1c227ed4-85dd-457b-a5ba-1a7616bf6e84"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f208c638-e7da-4804-82a1-e5a248130922"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""43ad26c5-9332-40ce-8670-8518ec75d68f"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Return"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c518489b-0581-4c01-8486-3cf5cd2fb02b"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Return"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""KeyBoard"",
                    ""id"": ""d5bc1021-f096-4fcb-94ba-49e9a7bb73e4"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Actions"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""6e25f6d8-905f-4af6-a60c-802ce8d75048"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Actions"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""83058337-e538-49b2-b9fd-e167161b89e8"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Actions"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""ed7a9710-770f-4ee4-9695-7e24dc51852c"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Actions"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""f11d6fd5-2c0b-4a78-b746-e51e2e307914"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Actions"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""GamePad"",
                    ""id"": ""2b09ba99-2203-4638-b9f0-f0bc870acfc8"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Actions"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1cd41c3b-7082-4c03-8e8e-be28ec8f1202"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Actions"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""88134d29-e4cb-40e2-bf8c-7edb5c01e677"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Actions"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""7db3802d-5cfc-4366-8701-21e7c5919cff"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Actions"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""448522ca-9dd5-4302-a373-2b4cfae59c05"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Actions"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""HackerController"",
            ""id"": ""149470da-7395-40c0-81e0-d5ceb4750f35"",
            ""actions"": [
                {
                    ""name"": ""Increment"",
                    ""type"": ""Button"",
                    ""id"": ""8eea24cc-65bc-4d5a-b1c5-b882748c9cb5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Decrement"",
                    ""type"": ""Button"",
                    ""id"": ""c067800b-d7b0-46ec-86cd-a71e5b824e09"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""West"",
                    ""type"": ""Value"",
                    ""id"": ""65d73bc4-8a79-4e28-bff9-9b294ebb0f1a"",
                    ""expectedControlType"": ""Digital"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Back"",
                    ""type"": ""Button"",
                    ""id"": ""3a237247-2a82-47e3-97fa-e61b1d396780"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Joystick"",
                    ""type"": ""Value"",
                    ""id"": ""97f1d16b-4ed0-41a1-98bd-6b8df2be1b94"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""South"",
                    ""type"": ""Button"",
                    ""id"": ""38dae59b-5ff6-4938-8578-3ea9b2d093da"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""East"",
                    ""type"": ""Button"",
                    ""id"": ""0e2ee71c-8cfa-4914-920b-2e72fe8a3a45"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""North"",
                    ""type"": ""Button"",
                    ""id"": ""77f4cd99-15c2-4a80-9936-7444d677d70e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""106a1ba1-9faa-45cb-8816-88582459e82f"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Increment"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""78b7bc1f-acd7-4d02-9546-b88b0962187e"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Increment"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6dccec6e-81dd-45cd-a52f-bf7d9e1db03b"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Decrement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""173e08c3-506d-4441-aa1d-333a1269585e"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Decrement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9a273b02-9331-456e-a56c-60214b56ecd2"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""West"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2819381e-7f98-4265-8fdc-a014b1456b82"",
                    ""path"": ""<Keyboard>/numpad4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""West"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""181787ee-c1b1-42c9-a5d3-2bb5deaa3644"",
                    ""path"": ""<Keyboard>/enter"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""09480ec0-363a-48ef-9524-2c4f7b5e02ab"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Back"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c5df4827-32ad-4f46-9c95-f9ff1f616511"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone(min=0.5)"",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Joystick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""63608382-2334-4d3c-b17e-7a005768494c"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""West"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""28535de7-f1b2-4beb-b233-d24df516ab81"",
                    ""path"": ""<Keyboard>/numpad2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""South"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a703e949-a77e-47ff-a82d-83d3ca8eb720"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""South"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d552d6ac-1b32-4a12-b141-71ccf46475c4"",
                    ""path"": ""<Keyboard>/numpad6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""East"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dd000bc3-c78e-41f9-a29c-c20366c148f1"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""East"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c176a470-70a2-448d-ade1-6772e612a2e8"",
                    ""path"": ""<Keyboard>/numpad8"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""North"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""00b1e048-fc0e-4030-8457-1febea3a026c"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""North"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // FPSController
        m_FPSController = asset.FindActionMap("FPSController", throwIfNotFound: true);
        m_FPSController_Move = m_FPSController.FindAction("Move", throwIfNotFound: true);
        m_FPSController_Look = m_FPSController.FindAction("Look", throwIfNotFound: true);
        m_FPSController_Interact = m_FPSController.FindAction("Interact", throwIfNotFound: true);
        m_FPSController_Return = m_FPSController.FindAction("Return", throwIfNotFound: true);
        m_FPSController_Actions = m_FPSController.FindAction("Actions", throwIfNotFound: true);
        // HackerController
        m_HackerController = asset.FindActionMap("HackerController", throwIfNotFound: true);
        m_HackerController_Increment = m_HackerController.FindAction("Increment", throwIfNotFound: true);
        m_HackerController_Decrement = m_HackerController.FindAction("Decrement", throwIfNotFound: true);
        m_HackerController_West = m_HackerController.FindAction("West", throwIfNotFound: true);
        m_HackerController_Back = m_HackerController.FindAction("Back", throwIfNotFound: true);
        m_HackerController_Joystick = m_HackerController.FindAction("Joystick", throwIfNotFound: true);
        m_HackerController_South = m_HackerController.FindAction("South", throwIfNotFound: true);
        m_HackerController_East = m_HackerController.FindAction("East", throwIfNotFound: true);
        m_HackerController_North = m_HackerController.FindAction("North", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // FPSController
    private readonly InputActionMap m_FPSController;
    private IFPSControllerActions m_FPSControllerActionsCallbackInterface;
    private readonly InputAction m_FPSController_Move;
    private readonly InputAction m_FPSController_Look;
    private readonly InputAction m_FPSController_Interact;
    private readonly InputAction m_FPSController_Return;
    private readonly InputAction m_FPSController_Actions;
    public struct FPSControllerActions
    {
        private @PlayerInput m_Wrapper;
        public FPSControllerActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_FPSController_Move;
        public InputAction @Look => m_Wrapper.m_FPSController_Look;
        public InputAction @Interact => m_Wrapper.m_FPSController_Interact;
        public InputAction @Return => m_Wrapper.m_FPSController_Return;
        public InputAction @Actions => m_Wrapper.m_FPSController_Actions;
        public InputActionMap Get() { return m_Wrapper.m_FPSController; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(FPSControllerActions set) { return set.Get(); }
        public void SetCallbacks(IFPSControllerActions instance)
        {
            if (m_Wrapper.m_FPSControllerActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_FPSControllerActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_FPSControllerActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_FPSControllerActionsCallbackInterface.OnMove;
                @Look.started -= m_Wrapper.m_FPSControllerActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_FPSControllerActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_FPSControllerActionsCallbackInterface.OnLook;
                @Interact.started -= m_Wrapper.m_FPSControllerActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_FPSControllerActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_FPSControllerActionsCallbackInterface.OnInteract;
                @Return.started -= m_Wrapper.m_FPSControllerActionsCallbackInterface.OnReturn;
                @Return.performed -= m_Wrapper.m_FPSControllerActionsCallbackInterface.OnReturn;
                @Return.canceled -= m_Wrapper.m_FPSControllerActionsCallbackInterface.OnReturn;
                @Actions.started -= m_Wrapper.m_FPSControllerActionsCallbackInterface.OnActions;
                @Actions.performed -= m_Wrapper.m_FPSControllerActionsCallbackInterface.OnActions;
                @Actions.canceled -= m_Wrapper.m_FPSControllerActionsCallbackInterface.OnActions;
            }
            m_Wrapper.m_FPSControllerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Return.started += instance.OnReturn;
                @Return.performed += instance.OnReturn;
                @Return.canceled += instance.OnReturn;
                @Actions.started += instance.OnActions;
                @Actions.performed += instance.OnActions;
                @Actions.canceled += instance.OnActions;
            }
        }
    }
    public FPSControllerActions @FPSController => new FPSControllerActions(this);

    // HackerController
    private readonly InputActionMap m_HackerController;
    private IHackerControllerActions m_HackerControllerActionsCallbackInterface;
    private readonly InputAction m_HackerController_Increment;
    private readonly InputAction m_HackerController_Decrement;
    private readonly InputAction m_HackerController_West;
    private readonly InputAction m_HackerController_Back;
    private readonly InputAction m_HackerController_Joystick;
    private readonly InputAction m_HackerController_South;
    private readonly InputAction m_HackerController_East;
    private readonly InputAction m_HackerController_North;
    public struct HackerControllerActions
    {
        private @PlayerInput m_Wrapper;
        public HackerControllerActions(@PlayerInput wrapper) { m_Wrapper = wrapper; }
        public InputAction @Increment => m_Wrapper.m_HackerController_Increment;
        public InputAction @Decrement => m_Wrapper.m_HackerController_Decrement;
        public InputAction @West => m_Wrapper.m_HackerController_West;
        public InputAction @Back => m_Wrapper.m_HackerController_Back;
        public InputAction @Joystick => m_Wrapper.m_HackerController_Joystick;
        public InputAction @South => m_Wrapper.m_HackerController_South;
        public InputAction @East => m_Wrapper.m_HackerController_East;
        public InputAction @North => m_Wrapper.m_HackerController_North;
        public InputActionMap Get() { return m_Wrapper.m_HackerController; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(HackerControllerActions set) { return set.Get(); }
        public void SetCallbacks(IHackerControllerActions instance)
        {
            if (m_Wrapper.m_HackerControllerActionsCallbackInterface != null)
            {
                @Increment.started -= m_Wrapper.m_HackerControllerActionsCallbackInterface.OnIncrement;
                @Increment.performed -= m_Wrapper.m_HackerControllerActionsCallbackInterface.OnIncrement;
                @Increment.canceled -= m_Wrapper.m_HackerControllerActionsCallbackInterface.OnIncrement;
                @Decrement.started -= m_Wrapper.m_HackerControllerActionsCallbackInterface.OnDecrement;
                @Decrement.performed -= m_Wrapper.m_HackerControllerActionsCallbackInterface.OnDecrement;
                @Decrement.canceled -= m_Wrapper.m_HackerControllerActionsCallbackInterface.OnDecrement;
                @West.started -= m_Wrapper.m_HackerControllerActionsCallbackInterface.OnWest;
                @West.performed -= m_Wrapper.m_HackerControllerActionsCallbackInterface.OnWest;
                @West.canceled -= m_Wrapper.m_HackerControllerActionsCallbackInterface.OnWest;
                @Back.started -= m_Wrapper.m_HackerControllerActionsCallbackInterface.OnBack;
                @Back.performed -= m_Wrapper.m_HackerControllerActionsCallbackInterface.OnBack;
                @Back.canceled -= m_Wrapper.m_HackerControllerActionsCallbackInterface.OnBack;
                @Joystick.started -= m_Wrapper.m_HackerControllerActionsCallbackInterface.OnJoystick;
                @Joystick.performed -= m_Wrapper.m_HackerControllerActionsCallbackInterface.OnJoystick;
                @Joystick.canceled -= m_Wrapper.m_HackerControllerActionsCallbackInterface.OnJoystick;
                @South.started -= m_Wrapper.m_HackerControllerActionsCallbackInterface.OnSouth;
                @South.performed -= m_Wrapper.m_HackerControllerActionsCallbackInterface.OnSouth;
                @South.canceled -= m_Wrapper.m_HackerControllerActionsCallbackInterface.OnSouth;
                @East.started -= m_Wrapper.m_HackerControllerActionsCallbackInterface.OnEast;
                @East.performed -= m_Wrapper.m_HackerControllerActionsCallbackInterface.OnEast;
                @East.canceled -= m_Wrapper.m_HackerControllerActionsCallbackInterface.OnEast;
                @North.started -= m_Wrapper.m_HackerControllerActionsCallbackInterface.OnNorth;
                @North.performed -= m_Wrapper.m_HackerControllerActionsCallbackInterface.OnNorth;
                @North.canceled -= m_Wrapper.m_HackerControllerActionsCallbackInterface.OnNorth;
            }
            m_Wrapper.m_HackerControllerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Increment.started += instance.OnIncrement;
                @Increment.performed += instance.OnIncrement;
                @Increment.canceled += instance.OnIncrement;
                @Decrement.started += instance.OnDecrement;
                @Decrement.performed += instance.OnDecrement;
                @Decrement.canceled += instance.OnDecrement;
                @West.started += instance.OnWest;
                @West.performed += instance.OnWest;
                @West.canceled += instance.OnWest;
                @Back.started += instance.OnBack;
                @Back.performed += instance.OnBack;
                @Back.canceled += instance.OnBack;
                @Joystick.started += instance.OnJoystick;
                @Joystick.performed += instance.OnJoystick;
                @Joystick.canceled += instance.OnJoystick;
                @South.started += instance.OnSouth;
                @South.performed += instance.OnSouth;
                @South.canceled += instance.OnSouth;
                @East.started += instance.OnEast;
                @East.performed += instance.OnEast;
                @East.canceled += instance.OnEast;
                @North.started += instance.OnNorth;
                @North.performed += instance.OnNorth;
                @North.canceled += instance.OnNorth;
            }
        }
    }
    public HackerControllerActions @HackerController => new HackerControllerActions(this);
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    public interface IFPSControllerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnReturn(InputAction.CallbackContext context);
        void OnActions(InputAction.CallbackContext context);
    }
    public interface IHackerControllerActions
    {
        void OnIncrement(InputAction.CallbackContext context);
        void OnDecrement(InputAction.CallbackContext context);
        void OnWest(InputAction.CallbackContext context);
        void OnBack(InputAction.CallbackContext context);
        void OnJoystick(InputAction.CallbackContext context);
        void OnSouth(InputAction.CallbackContext context);
        void OnEast(InputAction.CallbackContext context);
        void OnNorth(InputAction.CallbackContext context);
    }
}
